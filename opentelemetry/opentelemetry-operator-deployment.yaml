apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller-manager","app.kubernetes.io/instance":"opentelemetry-operator","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"opentelemetry-operator","app.kubernetes.io/version":"0.85.0","helm.sh/chart":"opentelemetry-operator-0.39.1"},"name":"opentelemetry-operator","namespace":"opentelemetry-operator"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"controller-manager","app.kubernetes.io/name":"opentelemetry-operator"}},"template":{"metadata":{"annotations":{"kubectl.kubernetes.io/default-container":"manager"},"labels":{"app.kubernetes.io/component":"controller-manager","app.kubernetes.io/name":"opentelemetry-operator"}},"spec":{"containers":[{"args":["--metrics-addr=0.0.0.0:8080","--enable-leader-election","--health-probe-addr=:8081","--collector-image=otel/opentelemetry-collector-contrib:0.85.0"],"command":["/manager"],"env":[{"name":"ENABLE_WEBHOOKS","value":"false"}],"image":"ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator:v0.85.0","livenessProbe":{"httpGet":{"path":"/healthz","port":8081},"initialDelaySeconds":15,"periodSeconds":20},"name":"manager","ports":[{"containerPort":8080,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":8081},"initialDelaySeconds":5,"periodSeconds":10},"resources":{"limits":{"cpu":"100m","memory":"128Mi"},"requests":{"cpu":"100m","memory":"64Mi"}}},{"args":["--secure-listen-address=0.0.0.0:8443","--upstream=http://127.0.0.1:8080/","--logtostderr=true","--v=0"],"image":"quay.io/brancz/kube-rbac-proxy:v0.14.2","name":"kube-rbac-proxy","ports":[{"containerPort":8443,"name":"https","protocol":"TCP"}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"5m","memory":"64Mi"}}}],"hostNetwork":false,"securityContext":{"fsGroup":65532,"runAsGroup":65532,"runAsNonRoot":true,"runAsUser":65532},"serviceAccountName":"opentelemetry-operator","terminationGracePeriodSeconds":10}}}}
  creationTimestamp: "2025-02-20T23:39:21Z"
  generation: 1
  labels:
    app.kubernetes.io/component: controller-manager
    app.kubernetes.io/instance: opentelemetry-operator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: opentelemetry-operator
    app.kubernetes.io/version: 0.85.0
    helm.sh/chart: opentelemetry-operator-0.39.1
  name: opentelemetry-operator
  namespace: opentelemetry-operator
  resourceVersion: "4654"
  uid: 10d6ecbf-4467-47bc-a2ff-1348ff6d6903
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/name: opentelemetry-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: controller-manager
        app.kubernetes.io/name: opentelemetry-operator
    spec:
      containers:
      - args:
        - --metrics-addr=0.0.0.0:8080
        - --enable-leader-election
        - --health-probe-addr=:8081
        - --collector-image=otel/opentelemetry-collector-contrib:0.85.0
        command:
        - /manager
        env:
        - name: ENABLE_WEBHOOKS
          value: "false"
        image: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator:v0.85.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: quay.io/brancz/kube-rbac-proxy:v0.14.2
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccount: opentelemetry-operator
      serviceAccountName: opentelemetry-operator
      terminationGracePeriodSeconds: 10
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-02-20T23:39:32Z"
    lastUpdateTime: "2025-02-20T23:39:32Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-02-20T23:39:21Z"
    lastUpdateTime: "2025-02-20T23:39:32Z"
    message: ReplicaSet "opentelemetry-operator-dd478567b" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
